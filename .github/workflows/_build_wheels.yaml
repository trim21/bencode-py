name: Reusable workflow example

on:
  workflow_call:

jobs:
  build_wheels:
    name: Build wheels
    runs-on: ${{ matrix.os }}
    env:
      SCCACHE_GHA_ENABLED: "true"
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-13
            cibw_build: "*[02468]-* *[02468]t-*"

          - os: macos-13
            cibw_build: "*[13579]-* *[13579]t-*"

          - os: macos-14
            cibw_build: "*"

          - os: windows-latest
            cibw_build: "*[02468]-* *[02468]t-*"

          - os: windows-latest
            cibw_build: "*[13579]-* *[13579]t-*"

          - os: ubuntu-24.04
            cibw_build: "*[02468]-* *[02468]t-*"

          - os: ubuntu-24.04
            cibw_build: "*[13579]-* *[13579]t-*"

          - os: ubuntu-24.04-arm
            cibw_build: "*[02468]-* *[02468]t-*"

          - os: ubuntu-24.04-arm
            cibw_build: "*[13579]-* *[13579]t-*"

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "true"

      - run: rm C:/Strawberry/perl/bin -rf
        if: ${{ runner.os == 'Windows' }}
        shell: bash

      - uses: ilammy/msvc-dev-cmd@v1
        if: ${{ runner.os == 'Windows' }}

      - name: Set up sccache
        uses: mozilla-actions/sccache-action@v0.0.9
        if: ${{ runner.os != 'Linux' }}
        with:
          disable_annotations: true
          token: ${{ github.token }}

      - name: Install the latest version of uv
        if: ${{ runner.os != 'Linux' }}
        uses: astral-sh/setup-uv@v5

      - name: Restore cached Primes
        if: ${{ runner.os != 'Linux' }}
        id: cache
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.UV_CACHE_DIR }}
            ~\AppData\Local\pypa\cibuildwheel\Cache
            ~/Library/Caches/cibuildwheel
            ~/.cache/cibuildwheel
          key: "cibuildwheel-${{ runner.os }}-${{ runner.arch }}-${{ matrix.cibw_build }}"

      - uses: pypa/cibuildwheel@v2.23.1
        env:
          CIBW_BUILD_FRONTEND: "build[uv]"
          CIBW_ARCHS: "native"
          CIBW_BUILD: ${{ matrix.cibw_build }}
          CIBW_TEST_REQUIRES: pytest
          CIBW_TEST_COMMAND: "pytest {project}/tests --assert-pkg-compiled=true"
          MACOSX_DEPLOYMENT_TARGET: "11.0"

      - run: ls ./wheelhouse/

      - uses: actions/upload-artifact@v4
        with:
          name: "wheels-${{ runner.os }}-${{ runner.arch }}-${{ strategy.job-index }}"
          path: ./wheelhouse/*.whl
          if-no-files-found: ignore

  build:
    name: make sdist and wheel
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - run: pipx run build -w
        env:
          BENCODE2_PURE_PYTHON: "1"

      - uses: actions/upload-artifact@v4
        with:
          name: "wheels-py"
          path: dist/*
